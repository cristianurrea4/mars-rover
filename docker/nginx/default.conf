# Definición del servidor
server {
    # Escucha en el puerto 80 (HTTP), puerto predeterminado para la comunicación HTTP
    listen 80;

    # Directorio raíz del sitio web, en este caso apuntando a la carpeta 'public' dentro del contenedor
    root /var/www/public;

    # Archivos de índice que NGINX intentará cargar por defecto
    index index.php index.html;

    # ====== CORS (Cross-Origin Resource Sharing) ======
    # Permite solicitudes desde el frontend en localhost:5173 (por ejemplo, Vite dev server)
    add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;

    # Define los métodos HTTP permitidos
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;

    # Define los encabezados HTTP permitidos en las solicitudes
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept' always;

    # Permite enviar cookies en solicitudes cross-origin
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    # Manejo especial para solicitudes OPTIONS (pre-flight requests de CORS)
    if ($request_method = 'OPTIONS') { # Asegura que el servidor responda correctamente a las solicitudes de verificación
        return 200;
    }

    # Funcionamiento de las solicitudes entre el front y el back
    # El navegador realiza una solicitud OPTIONS para verificar si se puede hacer la solicitud real (GET, POST, etc.)
    # El servidor responde con un código de estado 200 si está permitido.
    # Si el servidor responde afirmativamente, el navegador luego realiza la solicitud real (como POST, GET, etc.)
    # Si el servidor no responde adecuadamente (por ejemplo, no se permite el método o encabezado), el navegador bloquea la solicitud real

    # ====== Routing principal ======
    location / {
        # Intenta cargar el archivo solicitado. Si no existe, redirige a index.php con los parámetros de query
        try_files $uri $uri/ /index.php?$query_string;
    }

    # ====== Configuración para archivos PHP ======
    location ~ \.php$ { # Le indica a NGINX que cualquier solicitud que termine en .php debe ser gestionada por este bloque
        # Indica a NGINX que pase las peticiones PHP al contenedor 'php' en el puerto 9000
        fastcgi_pass php:9000;

        # Define el archivo de índice PHP predeterminado
        fastcgi_pass 127.0.0.1:9000;

        # Define la ruta real del script PHP que se ejecutará
        # $document_root: /var/www/public
        # fastcgi_script_name: index.php
        # ruta completa: /var/www/public/index.php
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        # Incluye parámetros necesarios para la ejecución de scripts PHP
        include fastcgi_params;
    }
}
